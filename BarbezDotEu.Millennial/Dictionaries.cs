// Copyright (c) Hannes Barbez. All rights reserved.
// Licensed under the GNU General Public License v3.0

using System.Collections.Generic;
using System.Linq;

namespace BarbezDotEu.Millennial
{
    /// <summary>
    /// Bundles several <see cref="Dictionary{TKey, TValue}"/> objects.
    /// </summary>
    internal static class Dictionaries
    {
        /// <summary>
        /// Defines the 'obfuscated' alphabet, as composed by us for this project. 
        /// </summary>
        /// <remarks>
        /// This dictionary results from comparing all non-standard textual characters used to construct any of the email headers 
        /// from the last 5-or-so years, complemented by some emojis found at github.com/AndrewRayCode/emoji-alphabet/blob/master/index.js
        /// and other characters from https://en.wikipedia.org/wiki/Unicode#Versions, and misc. Twitter handles (to be honest).
        /// </remarks>
        public static readonly Dictionary<string, List<string>> ObfuscatedCharacters = new()
        {
            { "A", new List<string> { "Ａ", "ａ", "à", "â", "Â", "ä", "⒜", "α", "а", "🅰", "д", "🇦", "𝗮", "𝗔", "𝓪", "ā", "ᴀ", "𝚊", "Ꮈ", "Ꭺ", "𝘼", "𝒶",
                "å", "Á", "ά", "Λ", "𝓪", "ᵃ", "𝖆", "Ꭿ", "ⓐ", "Ⓐ", "𝐚", "𝙖", "𝑎", "𝒂", "𝔞", "Δ", "𝐀", "@", "ᗩ", "𝘢", "𝒜", "𝕒", "შ",
                "∀", "ƛ", "₳", "🄰", "𝔸" }},
            { "B", new List<string> { "Ｂ", "ｂ", "ß", "Б", "в", "з", "เ", "𝐵", "🇧", "𝙱", "𝐁", "𝓑", "𝖡", "𝘽", "𝘉", "₿", "ь", "𝙗", "Ᏼ", "Ᏸ",
                "Ꮟ", "ⓑ", "𝑏", "Ⓑ", "⒝", "Ⲃ", "ⲃ", "𝕓", "𝗕", "𝗯", "Ⴆ",
                "𝐛", "β", "𝖁", "Ƀ", "𝘣", "𝕭" }},
            { "C", new List<string> { "¢", "©", "☪", "☾","⒞" , "ｃ", "Ｃ", "ᴄ", "ç", "С", "𝗰", "𝙘", "𝐜", "𝖼", "𝒄", "𝚌", "𝕔", "Ꮸ", "Ꮳ", "Ꮯ",
                "ⓒ", "Ⓒ", "Ⲥ", "ⲥ", "𝐂", "𝘾", "𝑐", "𝒸", "𝓬", "℃", "𝖈", "ᑕ", "𝘤", "𝒞", "ᶜ", "ℂ", "č", "Č", "ć", "Ć", "🅒", "₵", "𝑪" }},
            { "D", new List<string> { "Ｄ", "ᴅ", "𝓭", "𝗗", "⒟", "Ꮷ", "Ꮄ", "Ꭰ", "ⓓ", "Ⓓ", "𝗱", "𝙙", "𝙳", "𝘿", "ᵈ", "𝑑", "𝐝", "𝒹", "𝓓", "𝒅", "𝔇",
                "𝖉", "𝐃", "ᗪ", "𝘥", "𝔻", "ძ", "đ", "Đ", "𝑫", "𝚍", "🄳" }},
            { "E", new List<string> { "€", "ｅ", "Ｅ", "ᴇ", "é", "è", "⒠", "е", "є", "乇", "£", "🇪", "𝖊", "𝗲", "𝐄", "𝑬", "ҽ", "🅴","ə","Ⓔ", "ꍠ", "ꍟ", "ⲉ", "Ⲉ", "𝚎", "Ɇ",
                "𝔼", "🅔", "𝓮", "𝗘", "ε", "έ", "𝙚", "Ξ", "ᵉ", "⒠", "Ꮛ", "Ꭼ", "ⓔ", "ɛ", "𝐞", "ê", "𝙀", "𝑒", "ℯ", "𝒆", "𝔢", "𝘦", "𝕖", "ᕦ", "🄴", "ǝ",
                "୨", "୧", "𝙴", "Є", "𝘌" }},
            { "F", new List<string> { "Ｆ", "ｆ", "ғ", "🅵", "𝔽", "𝗙", "𝓕", "𝘍", "𝘧", "⒡", "𝙁", "ƒ", "𝕱", "𝙛", "ⓕ", "Ⓕ", "𝐟", "𝒻",
                "𝓯", "ꜰ", "𝒇", "𝑓", "ᖴ", "𝐹", "ᶠ", "Ⅎ", "🅕", "Ƒ", "₣", "𝑭", "🄵" }},
            { "G", new List<string> { "Ｇ", "ｇ", "ɢ", "Ǵ", "𝙶", "𝒢", "𝐆", "🇬","⒢", "𝔾", "𝘎", "𝗚", "𝙂", "𝖦", "𝓰", "🅶", "𝙜", "Ᏻ", "Ꮹ", "Ꮐ", "Ꮆ",
                "ⓖ", "Ⓖ", "ɡ", "𝗴", "𝑔", "𝐠", "ℊ", "𝒈", "₲", "𝑮", "𝘨", "ᵍ", "𝖌" }},
            { "H", new List<string> { "♓", "Ｈ", "ｈ", "ʜ", "ɥ", "ђ", "Н","⒣", "н", "𝗛", "𝗵", "𝖧", "𝚑", "Ԩ", "🅷", "𝖍", "𝕳", "ɦ", "ʰ", "ʱ", "Ᏺ", "Ꮵ", "Ꮒ", "𝙷",
                "Ꮋ","Ⓗ","ⓗ","ዘ", "Ⲏ", "ⲏ", "ᎰᎱ", "𝐡", "𝙝", "𝙃", "𝒽", "𝘩", "ᕼ", "Ӈ", "𝐇", "𝑯", "𝕙" }},
            { "I", new List<string> { "│", "𝖑", "Ｉ", "ｉ", "í", "Ï", "ï", "ℹ", "❗", "☤", "🔋", "❗", "𝒊", "𝓲", "𝗜", "ɪ", "🅸", "ί", "Ⓘ", "Ɨ", "𝑰", "ᴉ",
                "¹", "𝙞", "ℑ", "𝙄", "Ꮠ", "Ꮖ", "Ꭵ", "ⓘ", "⒤", "ⲓ", "Ⲓ", "𝗶", "𝐢", "î", "𝑖", "𝒾", "𝖎", "𝔦", "𝘪", "𝕚", "ⁱ", "𝚒", "🄸", "𝐈", "İ", "🅘" }},
            { "J", new List<string> { "𝙅", "ʲ","Ꭻ", "ⓙ", "Ⓙ","⒥", "𝙟", "𝑗", "𝐣", "𝕁", "𝐽", "𝔧", "𝔍", "𝒋", "𝒥", "𝗷", "𝖏", "𝒿", "𝘫" }},
            { "K", new List<string> { "ᵏ", "ｋ", "Ｋ", "к", "К", "𝗞", "🇰", "𝙆", "κ", "𝕶", "𝙠", "Ꮶ", "⒦", "ⓚ", "Ⓚ", "ⲕ", "Ⲕ", "𝐤", "𝓴", "𝑘", "𝓀", "𝒌", "𝑲", "𝘬", "𝚔",
                "𝕜", "𝐊", "𝗸", "ƙ" }},
            { "L", new List<string> { "Ｌ", "ｌ", "ʟ", "⒧", "𝑳", "𝘓", "𝕃", "𝓵", "𝕝", "𝗟", "ι", "𝓛", "𝙡", "ˡ", "˪", "Ꮮ", "Ꮭ", "Ꮣ", "ⓛ", "Ⓛ", "ɬ","𝗹", "𝐥", "𝚕", "Ⱡ", "𝕷",
                "𝙇", "𝑙", "𝓁", "𝔩", "𝐼", "Ł", "ł", "ᒪ", "𝘭", "⎣", "Լ", "𝐋", "𝒍", "🅛", "🄻", "𝘐", "ʅ" }},
            { "M", new List<string> { "〽", "♍", "♏", "Ｍ", "ᴍ", "Ⓜ", "м", "М", "𝗠", "𝖬", "⒨", "𝓶", "🅼", "𝕸", "𝓂", "𝔐", "ᗰ", "𝙼",
                "𝙢", "Ꮇ", "ⓜ", "Ⓜ", "ⲙ", "Ⲙ", "𝙈", "𝑚", "𝐦", "𝘮", "𝕄", "ᵐ", "ℳ", "🅜", "₥", "🄼", "𝐌", "𝗺", "𝚖", "ɱ" }},
            { "N", new List<string> { "ｎ", "Ｎ", "ɴ", "ℕ", "ń", "ñ", "и", "И", "𝔫", "𝒩", "л", "𝐍", "𝓝", "𝑵", "𝙽", "𝐧", "𝗡", "🅽", "𝖞", "𝖓", "𝒏", "🅝",
                "𝗻", "𝙉", "𝓷", "п", "η", "Π", "ή", "ɳ", "𝙣", "ⓝ", "Ⓝ", "⒩", "ⲛ","Ⲛ", "ⲡ", "Ⲡ", "ŋ", "𝑛", "𝓃", "ᑎ", "𝘯", "𝕟", "ⁿ", "Ɲ", "₦",
                "🄽" }},
            { "O", new List<string> { "∙", "°", "⭕", "０", "ｏ", "Ｏ", "ᴏ", "ó", "ö", "о", "🅾", "𝕠", "𝓸", "✪", "☀","Ꭴ",
                "💫", "➲", "⌚", "◦", "☻", "•", "⚙", "🌀", "☺", "☼", "🕓", "🌎", "🏀", "⚽", "🕒", "Ω", "🕛", "🔵", "𝖔", "ᵒ", "𝑶",
                "💍", "😄", "😍", "🔴", "💣", "🎯", "😦", "‍👩", "👧", "👦", "😛", "😳", "☀", "🕚", "🤑", "💢", "⛔",
                "𝙤", "🅾", "𝒐", "𝚘", "𝘰", "𝖮", "𝐨", "𝗼", "𝘖", "𝗈", "😠", "🕔", "😬", "😷", "😱", "😀", "😎", "😉", "🛑",
                "🤩", "⏱", "🤔", "😔", "😧", "😲", "🔍", "😑", "😣", "⛔", "🙂", "🕖", "🧐", "🎅", "🤓", "🤯", "😜", "ℴ",
                "🙃", "😮", "𝗢", "Ø", "ø", "ο", "ό", "˳", "Ꮽ", "Ꮼ", "Ꮻ", "Ꮱ", "Ꮫ", "Ꮕ", "Ꮎ", "Ꮂ", "Ꭷ", "ⓞ", "Ⓞ", "⒪", "ⲑ", "Ⲑ", "ⲟ",
                "Ⲟ", "ő", "ô", "ō", "ǒ", "𝙊", "𝑜", "𝔒", "φ", "Ơ", "𝟬", "𝐎", "🅞", "🄾", "σ" }},
            { "P", new List<string> { "Ｐ", "ᴩ", "р", "🅿", "🇵", "𝗣", "ρ", "𝙥", "Ꮲ", "ⓟ", "Ⓟ", "⒫", "ⲣ", "Ⲣ", "Ⳁ", "ⳁ", "𝗽", "𝙋", "ᵖ", "𝑝",
                "𝐏", "𝐩", "𝓅", "𝒑", "𝘱", "𝕡", "₱", "ᴘ", "𝑷", "🅟" }},
            { "Q", new List<string> { "ⓠ","Ⓠ","⒬", "𝐪", "𝒒" }},
            { "R", new List<string> { "®", "ʳ", "Ｒ", "ｒ", "ʀ", "я", "𝖱", "𝗿", "г", "𝗥","⒭", "𝐑", "𝙍", "𝓻", "𝓻", "𝚁", "ɾ", "🆁", "𝖗", "𝙧", "˹", "Ꮢ", "Ꭱ", "ⓡ",
                "Ⓡ", "₹", "𝒓", "र", "𝐫", "𝑟", "𝓇", "𝔯", "𝑹", "𝘳", "𝕣", "𝚛", "ᖇ", "Ɽ", "🅁", "𝓡", "🅡" }},
            { "S", new List<string> { "⚡", "Ｓ", "ｓ", "ѕ", "💰", "$", "𝐒", "⚡", "💲","⒮", "🇸", "🅢", "𝑺", "𝗦", "𝚂", "𝘚", "𝖲", "𝙎", "𝓼", "ˢ", "ṣ", "𝖘", "ꜱ", "🆂", "𝒔",
                "𝙨", "Ꮪ", "Ꮥ", "Ꭶ", "ⓢ", "ऽ", "Ⓢ", "Ϩ", "ϩ", "ꇙ", "ꇘ", "ʂ", "𝘀", "𝐬", "𝙎", "𝑠", "𝓈", "𝔰", "ᔕ", "𝘴", "𝕤", "š", "Š", "§", "₴", "𝚜", "🅂" }},
            { "T", new List<string> { "✝", "⚚", "Ｔ", "ｔ", "ᴛ", "Т", "т", "ｲ", "🌱", "𝗍", "𝐓", "🇹", "𝙩", "𝒕", "𝓽", "𝐭", "ᵗ", "Ꮏ", "Ꭲ", "ⓣ", "𝓉", "𝖐",
                "𝓣", "𝕥", "𝑻", "𝗧", "𝘁", "𝙏", "τ", "𝖙", "🆃", "Ⓣ", "⒯", "ⲧ", "Ⲧ", "Ϯ", "ϯ", "𝑡", "𝘵", "⊥", "𝒯", "Ƭ", "₮", "𝒕", "𝚝", "𝚃", "🅣" }},
            { "U", new List<string> { "⛎", "ｕ", "Ｕ", "ᴜ", "ù", "Ü", "ü", "υ", "🇺", "𝙪", "ⓤ", "Ⓤ", "⒰", "ű", "ǔ", "ū", "û", "𝘂", "𝐮", "𝙐", "𝓊", "𝓾", "𝒖", "𝑢", "Ʉ",
                "𝔲", "ᑌ", "𝘶", "𝕦", "ᵘ", "𝗨", "𝖚", "𝒰", "𝒖" }},
            { "V", new List<string> { "☑", "✓", "✔", "✅", "ᴠ", "𝗩", "𝙑", "𝖵", "♈", "ν", "𝖛", "˅", "ˬ", "Ꮴ", "Ꮩ", "Ꮙ", "ⓥ", "Ⓥ", "𝐕",
                "⒱", "𝚟", "𝙫", "𝑣", "𝐯", "𝓋", "𝒱", "𝓥", "𝒗", "ᐯ", "𝘷", "ᵛ", "ⱽ", "𝘃", "𝓿", "🅅", "ʋ" }},
            { "W", new List<string> { "ｗ", "Ｗ", "ᴡ", "𝐖", "𝗪", "𝙒", "𝓦", "ώ", "ᗯ", "ɯ", "𝙬", "ʷ", "Ꮿ", "Ꮤ", "Ꮚ", "Ꮗ", "Ꮃ", "ⓦ", "Ⓦ", "⒲", "ⲱ", "🆆", "𝘞",
                "Ⲱ", "ϣ", "Ϣ", "ɯ", "𝘄", "𝚠", "Ⓦ", "𝔀", "𝓌", "𝔴", "𝐰", "𝘸", "Ɯ", "𝘞" }},
            { "X", new List<string> { "✖", "❎", "❌", "Ｘ", "х", "𝒳", "✖", "ж", "𝐗", "𝘟", "𝕏", "𝖷", "𝓧", "𝑿", "𝚇", "𝙓", "×", "χ", "𝖝", "˟", "ˣ",
                "ⓧ","⒳","Ⓧ","𐩩", "ⲭ", "Ⲭ", "𝕩" }},
            { "Y", new List<string> { "ｙ", "Ｙ", "у", "🇾", "𝔂", "ʏ", "γ", "ყ", "𝙮", "ˠ", "ʸ", "Ꮍ", "Ꭹ", "ⓨ", "Ⓨ", "⒴", "𐩠", "ⲩ",
                "Ⲩ", "Ⲯ", "ⲯ", "ɣ", "𝐲", "𝙔", "𝒚", "𝓎", "𝐘", "𝒚", "𝚢", "🅈", "𝘺" }},
            { "Z", new List<string> { "Ｚ", "🇿", "Ꮓ", "ⓩ", "Ⓩ", "⒵", "ⲍ", "Ⲍ", "ʑ", "ʐ", "ᴢ", "𝑧", "𝓩", "𝐙", "ž", "Ž", "𝘇", "𝐳", "ᶻ" }},
            { "AE", new List<string> { "Æ" }},
            { "TM", new List<string> { "™" }},
            { "ZZZ", new List<string> { "💤" }},
            { "OK", new List<string> { "🆗" }},
            { "BI", new List<string> { "ы" }},
            { "TOP", new List<string> { "🔝" }},
        };

        /// <summary>
        /// Gets all obfuscation characters.
        /// </summary>
        public static readonly IEnumerable<string> AllObfuscationCharacters = ObfuscatedCharacters.SelectMany(x => x.Value);
    }
}
